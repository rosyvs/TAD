# Generated 2022-10-09 from:
# /home/rosy/TAD/model/hparams/train_ecapa_kids_LITE_fixlen.yaml
# yamllint disable
# ################################
# Model: Speaker identification with ECAPA using kids corpora
# Authors: Rosy Southwell, based on recipe by Hwidong Na & Mirco Ravanelli

# LITE version skips steps that might lead to OOM
# ################################

# Basic parameters
seed: 303
__set_seed: !apply:torch.manual_seed [303]
output_folder: results/ecapa_kids_anew_NOAUG_fixlen/303
save_folder: results/ecapa_kids_anew_NOAUG_fixlen/303/save
train_log: results/ecapa_kids_anew_NOAUG_fixlen/303/train_log.txt

# Data files
data_folder: /mnt/shared/CORPORA/  # e.g. /path/to/Voxceleb
train_annotation: /mnt/shared/CORPORA//data_manifests/ALL_TRAIN_mindur1.csv
valid_annotation: /mnt/shared/CORPORA//data_manifests/ISAT-SI_DEV.csv

# verification_file: #TODO: make verification pairs from TEST split 

skip_prep: true
ckpt_interval_minutes: 3 # save checkpoint every N min

# Training parameters
number_of_epochs: 10
batch_size: 2  # TODO: changed from 32
lr: 0.0001 # 0.001 orig
base_lr: 0.00000001
max_lr: 0.0001
step_size: 65000 # TODO: check this isn't something that should be constrained by input length
sample_rate: 16000
sentence_len: 3.0 # seconds TODO: how to make it take variable length inputs, check where this param is used 
shuffle: true # TODO: rather sort by duration than shuffle for batches? 
random_chunk: true
sorting: shuffle
# avoid_if_longer_than: !ref <sample_rate> * 30

# Feature parameters
n_mels: 80
left_frames: 0
right_frames: 0
deltas: false

# Number of speakers
out_n_neurons: 4589 # this is the n speakers in the training data 

dataloader_options:
  batch_size: 2
  shuffle: true
  num_workers: 2


# Functions
compute_features: &id001 !new:speechbrain.lobes.features.Fbank
    # augment_wavedrop: !ref <augment_wavedrop>
    # augment_speed: !ref <augment_speed>
    # # add_rev: !ref <add_rev>
    # add_noise: !ref <add_noise>
    # add_rev_noise: !ref <add_rev_noise>
    # add_isat_noise: !ref <add_isat_noise>
  n_mels: 80
  left_frames: 0
  right_frames: 0
  deltas: false

embedding_model: &id002 !new:speechbrain.lobes.models.ECAPA_TDNN.ECAPA_TDNN
  input_size: 80
  channels: [512, 512, 512, 512, 1536]   # use fewer channels in CNN. Was [1024, 1024, 1024, 1024, 3072]
  kernel_sizes: [5, 3, 3, 3, 1]
  dilations: [1, 2, 3, 4, 1]
  groups: [1, 1, 1, 1, 1]
  attention_channels: 128
  lin_neurons: 192

classifier: &id003 !new:speechbrain.lobes.models.ECAPA_TDNN.Classifier
  input_size: 192
  out_neurons: 4589

epoch_counter: &id005 !new:speechbrain.utils.epoch_loop.EpochCounter
  limit: 10

# # Data augmentation
# augment_wavedrop: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
#     sample_rate: !ref <sample_rate>
#     speeds: [100]

# augment_speed: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
#     sample_rate: !ref <sample_rate>
#     speeds: [95, 100, 105]

# add_rev: !new:speechbrain.lobes.augment.c
#     noise_csv: !ref <data_folder>/data_manifests/musan_noise.csv #path to noise csv here
#     reverb_csv: !ref <data_folder>/data_manifests/reverb.csv # path to reverb csv here
#     # openrir_max_noise_len: 3.0  # seconds
#     reverb_prob: 1.0
#     noise_prob: 0.0
#     noise_snr_low: 0
#     noise_snr_high: 15
#     rir_scale_factor: 1.0

# add_noise: !new:speechbrain.lobes.augment.EnvCorrupt #TODO: add speechbrain noise data to this 
#     noise_csv: !ref <data_folder>/data_manifests/musan_noise.csv #path to noise csv here
#     reverb_csv: !ref <data_folder>/data_manifests/reverb.csv # path to reverb csv here
#     # openrir_max_noise_len: 3.0  # seconds
#     reverb_prob: 0.0
#     noise_prob: 1.0
#     noise_snr_low: 0
#     noise_snr_high: 15
#     rir_scale_factor: 1.0

# add_rev_noise: !new:speechbrain.lobes.augment.EnvCorrupt
#     noise_csv: !ref <data_folder>/data_manifests/musan_noise.csv #path to noise csv here
#     reverb_csv: !ref <data_folder>/data_manifests/reverb.csv # path to reverb csv here
#     # openrir_max_noise_len: 3.0  # seconds
#     reverb_prob: 1.0
#     noise_prob: 1.0
#     noise_snr_low: 0
#     noise_snr_high: 15
#     rir_scale_factor: 1.0

# add_isat_noise: !new:speechbrain.lobes.augment.EnvCorrupt # add speechbrain noise data to this 
#     noise_csv: !ref <data_folder>/data_manifests/isat_noise.csv
#     reverb_csv: !ref <data_folder>/data_manifests/reverb.csv
#     # openrir_max_noise_len: 3.0  # seconds
#     reverb_prob: 0.0
#     noise_prob: 1.0
#     noise_snr_low: 0
#     noise_snr_high: 15
#     rir_scale_factor: 1.0


# Definition of the augmentation pipeline.
# If concat_augment = False, the augmentation techniques are applied
# in sequence. If concat_augment = True, all the augmented signals
# # are concatenated in a single big batch.

augment_pipeline: []
concat_augment: false

mean_var_norm: &id004 !new:speechbrain.processing.features.InputNormalization

  norm_type: sentence
  std_norm: false

modules:
  compute_features: *id001
  embedding_model: *id002
  classifier: *id003
  mean_var_norm: *id004
compute_cost: !new:speechbrain.nnet.losses.LogSoftmaxWrapper
  loss_fn: !new:speechbrain.nnet.losses.AdditiveAngularMargin
    margin: 0.2
    scale: 30

opt_class: !name:torch.optim.Adam
  lr: 0.0001
  weight_decay: 0.000002

lr_annealing: &id006 !new:speechbrain.nnet.schedulers.CyclicLRScheduler
  base_lr: 0.00000001
  max_lr: 0.0001
  step_size: 65000

# Logging + checkpoints
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
  save_file: results/ecapa_kids_anew_NOAUG_fixlen/303/train_log.txt

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
  metric: !name:speechbrain.nnet.losses.classification_error
    reduction: batch

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: results/ecapa_kids_anew_NOAUG_fixlen/303/save
  recoverables:
    embedding_model: *id002
    classifier: *id003
    normalizer: *id004
    counter: *id005
    lr_annealing: *id006
